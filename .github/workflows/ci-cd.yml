name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: chathaven
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpassword
        ports:
          - 3306:3306  # Fix MySQL port (was mistakenly 3000)
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Move into src directory
        run: cd src && ls -la  # List files to verify package.json is found

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: src/package-lock.json

      - name: Install dependencies
        run: cd src && npm install

      - name: Wait for MySQL to Start
        run: |
          sudo apt-get install -y mysql-client
          for i in {1..10}; do
            if mysql -h 127.0.0.1 -u testuser -ptestpassword -e "SELECT 1"; then
              echo "MySQL is ready."
              exit 0
            fi
            echo "Waiting for MySQL..."
            sleep 2
          done
          echo "MySQL did not start in time." && exit 1
      - name: Run Database Migrations
        run: |
          mysql -h 127.0.0.1 -u testuser -ptestpassword chathaven < src/schema.sql


      - name: Run Jest Tests
        env:
          DB_HOST: 127.0.0.1
          DB_USER: testuser
          DB_PASSWORD: testpassword
          DB_DATABASE: chathaven
        run: |
          cd src
          mkdir -p ../test-results  # Ensure the directory exists
          npm test --verbose > ../test-results/test-results.txt  # Save readable results

      - name: Upload Test Results as an Artifact
        if: always()  # Ensures results are saved even if tests fail
        uses: actions/upload-artifact@v3
        with:
          name: jest-test-results
          path: test-results/test-results.txt

  deploy:
    needs: build_and_test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Deploy to GitHub Pages
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        branch: gh-pages
        folder: src/public
        token: ${{ secrets.GH_TOKEN }}




